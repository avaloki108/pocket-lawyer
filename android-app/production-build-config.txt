// android/app/build.gradle.kts
// PRODUCTION-READY BUILD CONFIGURATION FOR GOOGLE PLAY STORE

plugins {
    id("com.android.application")
    id("kotlin-android")
    id("dev.flutter.flutter-gradle-plugin")
    id("com.google.gms.google-services")
    id("com.google.firebase.crashlytics")
}

// Load keystore properties from secure file
val keystorePropertiesFile = rootProject.file("keystore.properties")
val keystoreProperties = java.util.Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(java.io.FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "ai.pocketlawyer.app"  // UNIQUE PRODUCTION PACKAGE NAME
    compileSdk = 34
    ndkVersion = "26.1.10909125"
    buildToolsVersion = "34.0.0"
    
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }
    
    defaultConfig {
        applicationId = "ai.pocketlawyer.app"
        minSdk = 23  // Android 6.0+ (96% device coverage)
        targetSdk = 34  // Latest Android 14
        versionCode = 1  // INCREMENT FOR EACH RELEASE
        versionName = "1.0.0"  // USER-VISIBLE VERSION
        
        // Enable multidex for large app
        multiDexEnabled = true
        
        // Vector drawable support
        vectorDrawables.useSupportLibrary = true
        
        // Build config fields for runtime configuration
        buildConfigField("String", "API_BASE_URL", "\"https://api.pocketlawyer.ai\"")
        buildConfigField("String", "PRIVACY_POLICY_URL", "\"https://pocketlawyer.ai/privacy\"")
        buildConfigField("String", "TERMS_URL", "\"https://pocketlawyer.ai/terms\"")
        
        // App bundle configuration
        ndk {
            // Optimize APK size by including only necessary ABIs
            abiFilters += listOf("armeabi-v7a", "arm64-v8a", "x86_64")
        }
        
        // Proguard configuration
        proguardFiles(
            getDefaultProguardFile("proguard-android-optimize.txt"),
            "proguard-rules.pro"
        )
    }
    
    signingConfigs {
        create("release") {
            if (keystorePropertiesFile.exists()) {
                keyAlias = keystoreProperties["keyAlias"] as String
                keyPassword = keystoreProperties["keyPassword"] as String
                storeFile = file(keystoreProperties["storeFile"] as String)
                storePassword = keystoreProperties["storePassword"] as String
            } else {
                // Fallback for CI/CD environments
                keyAlias = System.getenv("KEY_ALIAS") ?: "pocket-lawyer"
                keyPassword = System.getenv("KEY_PASSWORD") ?: ""
                storeFile = file(System.getenv("KEYSTORE_FILE") ?: "pocket-lawyer.jks")
                storePassword = System.getenv("KEYSTORE_PASSWORD") ?: ""
            }
        }
    }
    
    buildTypes {
        debug {
            applicationIdSuffix = ".debug"
            versionNameSuffix = "-DEBUG"
            isDebuggable = true
            isMinifyEnabled = false
            isShrinkResources = false
            
            // Debug-specific API endpoints
            buildConfigField("String", "API_BASE_URL", "\"https://dev-api.pocketlawyer.ai\"")
        }
        
        release {
            signingConfig = signingConfigs.getByName("release")
            
            // CRITICAL: Enable for production
            isMinifyEnabled = true  // Code obfuscation
            isShrinkResources = true  // Remove unused resources
            isDebuggable = false
            
            // Optimization
            isCrunchPngs = true  // PNG optimization
            isZipAlignEnabled = true  // APK alignment
            
            // Proguard/R8 for code optimization
            proguardFiles(
                getDefaultProguardFile("proguard-android-optimize.txt"),
                "proguard-rules.pro"
            )
            
            // Native code stripping
            ndk {
                debugSymbolLevel = "FULL"  // Upload to Play Console for crash analysis
            }
        }
        
        create("staging") {
            initWith(getByName("release"))
            applicationIdSuffix = ".staging"
            versionNameSuffix = "-STAGING"
            
            buildConfigField("String", "API_BASE_URL", "\"https://staging-api.pocketlawyer.ai\"")
        }
    }
    
    // App Bundle configuration for Play Store
    bundle {
        language {
            // Generate split APKs per language
            enableSplit = true
        }
        density {
            // Generate split APKs per screen density
            enableSplit = true
        }
        abi {
            // Generate split APKs per CPU architecture
            enableSplit = true
        }
    }
    
    // Lint options for CI/CD
    lint {
        abortOnError = false
        checkReleaseBuilds = true
        disable += listOf("MissingTranslation", "ExtraTranslation")
    }
    
    packagingOptions {
        resources {
            excludes += listOf(
                "META-INF/DEPENDENCIES",
                "META-INF/LICENSE",
                "META-INF/LICENSE.txt",
                "META-INF/NOTICE",
                "META-INF/NOTICE.txt"
            )
        }
    }
}

flutter {
    source = "../.."
}

dependencies {
    implementation("androidx.multidex:multidex:2.0.1")
    implementation("com.google.android.play:core:1.10.3")
    implementation("com.google.android.play:review:2.0.1")
    
    // Firebase
    implementation(platform("com.google.firebase:firebase-bom:33.0.0"))
    implementation("com.google.firebase:firebase-analytics")
    implementation("com.google.firebase:firebase-crashlytics")
    implementation("com.google.firebase:firebase-messaging")
    implementation("com.google.firebase:firebase-perf")
    
    // In-app purchases
    implementation("com.android.billingclient:billing:6.1.0")
}

// Tasks for automation
tasks {
    register("generateReleaseNotes") {
        doLast {
            val notes = """
                Version ${android.defaultConfig.versionName}
                
                üöÄ What's New:
                - AI-powered legal assistant
                - 1000+ legal templates
                - Case law search
                - Legal calculators
                - Voice input support
                
                üêõ Bug Fixes:
                - Improved stability
                - Performance optimizations
                
                üí° Coming Soon:
                - Document scanner
                - Offline mode
                - Team collaboration
            """.trimIndent()
            
            file("release-notes.txt").writeText(notes)
        }
    }
    
    register("uploadToPlayStore") {
        dependsOn("bundleRelease")
        doLast {
            exec {
                commandLine(
                    "fastlane", "android", "deploy",
                    "track:internal",
                    "aab:app/build/outputs/bundle/release/app-release.aab"
                )
            }
        }
    }
}